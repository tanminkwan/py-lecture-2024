Python 개요
 - Life is Short, You Need Python!
   : 쉽다. 간결하다. 빠르다. 강력하다.
    Program development using Python is 5-10 times faster than using C/C++, and 3-5 times faster than using Java.
    :https://www.python.org/doc/essays/omg-darpa-mcc-position/
 - Python is a "glue language"
:https://yohanes.gultom.id/2020/04/03/splitting-video-with-ffmpeg-and-python/
:https://ammff.tistory.com/102
:https://www.javatpoint.com/selenium-python

Bettaries included
:https://testdriven.io/blog/django-vs-flask/


Python 문법
:dynamic vairable
:list tuple set dict
:comprehension
:Python 함수는 일급 객체(First-Class object)
:PEP 8, PEP 20


"English is the hottest new programming language" - Andrej Karpathy (previously Director of AI at Tesla, OpenAI)

---
AI Pro : 

파이썬을 대화형으로만 사용할 때 배울 필요가 없는 것들은 주로 코드의 구조화, 파일 및 프로젝트 관리, 라이브러리 사용 등과 관련된 주제입니다. 대화형 인터프리터나 REPL(Read-Eval-Print Loop)를 통해 간단한 실험을 하거나 스크립트를 실행할 때는 다음과 같은 주제에 대한 상세한 이해가 필요하지 않을 수 있습니다:

    파일 및 프로젝트 구조:
        대화형 환경에서는 주로 한 줄씩 코드를 실행하거나 간단한 스크립트를 작성하는 데 집중합니다. 따라서 파일과 폴더의 구조, 모듈 및 패키지의 관리, 가상 환경 설정 등은 덜 중요할 수 있습니다.

    클래스와 객체 지향 프로그래밍:
        대화형 환경에서는 객체 지향 프로그래밍(OOP)의 개념과 클래스 작성이 필요하지 않을 수 있습니다. 다만, 기본적인 데이터 타입과 함수 사용에 집중하는 것이 더 효율적일 수 있습니다.

    모듈과 라이브러리 사용:
        대화형 환경에서는 일반적으로 기본적인 내장 함수들과 몇 가지 기본 모듈을 사용합니다. 따라서 외부 라이브러리나 패키지를 사용하는 방법은 중요하지 않을 수 있습니다.

    예외 처리와 에러 핸들링:
        대화형 환경에서는 간단한 실험을 위해 예외 처리와 에러 핸들링에 대한 깊은 이해가 필요하지 않을 수 있습니다.

    코드의 구조화와 모듈화:
        대화형으로 간단한 스크립트를 작성할 때는 코드를 모듈화하고 구조화하는 것보다는 간편함을 추구할 수 있습니다.